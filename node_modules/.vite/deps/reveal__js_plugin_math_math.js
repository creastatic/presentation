import {
  __commonJS
} from "./chunk-XNHBATJA.js";

// node_modules/.pnpm/reveal.js@4.5.0/node_modules/reveal.js/plugin/math/math.js
var require_math = __commonJS({
  "node_modules/.pnpm/reveal.js@4.5.0/node_modules/reveal.js/plugin/math/math.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).RevealMath = e();
    }(exports, function() {
      "use strict";
      const t = () => {
        let t2, e2 = { messageStyle: "none", tex2jax: { inlineMath: [["$", "$"], ["\\(", "\\)"]], skipTags: ["script", "noscript", "style", "textarea", "pre"] }, skipStartupTypeset: true };
        return { id: "mathjax2", init: function(n) {
          t2 = n;
          let a = t2.getConfig().mathjax2 || t2.getConfig().math || {}, i = { ...e2, ...a }, s = (i.mathjax || "https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js") + "?config=" + (i.config || "TeX-AMS_HTML-full");
          i.tex2jax = { ...e2.tex2jax, ...a.tex2jax }, i.mathjax = i.config = null, function(t3, e3) {
            let n2 = document.querySelector("head"), a2 = document.createElement("script");
            a2.type = "text/javascript", a2.src = t3;
            let i2 = () => {
              "function" == typeof e3 && (e3.call(), e3 = null);
            };
            a2.onload = i2, a2.onreadystatechange = () => {
              "loaded" === this.readyState && i2();
            }, n2.appendChild(a2);
          }(s, function() {
            MathJax.Hub.Config(i), MathJax.Hub.Queue(["Typeset", MathJax.Hub, t2.getRevealElement()]), MathJax.Hub.Queue(t2.layout), t2.on("slidechanged", function(t3) {
              MathJax.Hub.Queue(["Typeset", MathJax.Hub, t3.currentSlide]);
            });
          });
        } };
      }, e = t;
      return Plugin = Object.assign(e(), { KaTeX: () => {
        let t2, e2 = { version: "latest", delimiters: [{ left: "$$", right: "$$", display: true }, { left: "$", right: "$", display: false }, { left: "\\(", right: "\\)", display: false }, { left: "\\[", right: "\\]", display: true }], ignoredTags: ["script", "noscript", "style", "textarea", "pre"] };
        const n = (t3) => new Promise((e3, n2) => {
          const a = document.createElement("script");
          a.type = "text/javascript", a.onload = e3, a.onerror = n2, a.src = t3, document.head.append(a);
        });
        return { id: "katex", init: function(a) {
          t2 = a;
          let i = t2.getConfig().katex || {}, s = { ...e2, ...i };
          const { local: o, version: l, extensions: r, ...c } = s;
          let d = s.local || "https://cdn.jsdelivr.net/npm/katex", u = s.local ? "" : "@" + s.version, p = d + u + "/dist/katex.min.css", h = d + u + "/dist/contrib/mhchem.min.js", x = d + u + "/dist/contrib/auto-render.min.js", m = [d + u + "/dist/katex.min.js"];
          s.extensions && s.extensions.includes("mhchem") && m.push(h), m.push(x);
          const f = () => {
            renderMathInElement(a.getSlidesElement(), c), t2.layout();
          };
          ((t3) => {
            let e3 = document.createElement("link");
            e3.rel = "stylesheet", e3.href = t3, document.head.appendChild(e3);
          })(p), async function(t3) {
            for (const e3 of t3)
              await n(e3);
          }(m).then(() => {
            t2.isReady() ? f() : t2.on("ready", f.bind(this));
          });
        } };
      }, MathJax2: t, MathJax3: () => {
        let t2, e2 = { tex: { inlineMath: [["$", "$"], ["\\(", "\\)"]] }, options: { skipHtmlTags: ["script", "noscript", "style", "textarea", "pre"] }, startup: { ready: () => {
          MathJax.startup.defaultReady(), MathJax.startup.promise.then(() => {
            Reveal.layout();
          });
        } } };
        return { id: "mathjax3", init: function(n) {
          t2 = n;
          let a = t2.getConfig().mathjax3 || {}, i = { ...e2, ...a };
          i.tex = { ...e2.tex, ...a.tex }, i.options = { ...e2.options, ...a.options }, i.startup = { ...e2.startup, ...a.startup };
          let s = i.mathjax || "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js";
          i.mathjax = null, window.MathJax = i, function(t3, e3) {
            let n2 = document.createElement("script");
            n2.type = "text/javascript", n2.id = "MathJax-script", n2.src = t3, n2.async = true, n2.onload = () => {
              "function" == typeof e3 && (e3.call(), e3 = null);
            }, document.head.appendChild(n2);
          }(s, function() {
            Reveal.addEventListener("slidechanged", function(t3) {
              MathJax.typeset();
            });
          });
        } };
      } });
    });
  }
});
export default require_math();
//# sourceMappingURL=reveal__js_plugin_math_math.js.map
